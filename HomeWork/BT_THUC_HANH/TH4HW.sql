

-- 1
DELIMITER //
CREATE PROCEDURE INDANHSACHNV(MANV VARCHAR(5))
BEGIN 
	SELECT * 
    FROM th3qlnv.NHANVIEN AS N
    WHERE N.MANV = MANV;
END//

CALL INDANHSACHNV('KT001');



-- 2

DELIMITER //
CREATE PROCEDURE DEMNV (IN GT VARCHAR(4), OUT SOLUONG INT)
BEGIN
	SELECT COUNT(*) INTO SOLUONG
    FROM th3qlnv.NHANVIEN AS N
    WHERE N.GT = GT;
END //

CALL DEMNV('NU',@SOLUONG);
SELECT @SOLUONG; 

-- 3
DELIMITER //
CREATE PROCEDURE TIMNVNN (DMNN VARCHAR(20))
BEGIN 
	SELECT *
    FROM th3qlnv.NHANVIEN AS N
    INNER JOIN th3qlnv.tdnn AS T
    ON N.MANV = T.MANV
	INNER JOIN th3qlnv.dmnn AS D
    ON T.MANN = D.MANN
	WHERE D.TENNN = DMNN;
END //
 
CALL TIMNVNN('ANH'); 


-- 4
DELIMITER //
CREATE PROCEDURE CKTUOI(TUOI1 VARCHAR(5),TUOI2 VARCHAR(5))
BEGIN
	SELECT *
    FROM th3qlnv.NHANVIEN AS N
    WHERE year(curdate()) - year(N.NGSINH) BETWEEN TUOI1 AND TUOI2;
END //

CALL CKTUOI(20,60);


-- 5
DELIMITER //
CREATE FUNCTION INDANHSACHNV(MANV VARCHAR(5))
RETURNS VARCHAR(40)
READS SQL DATA  DETERMINISTIC
BEGIN 
	DECLARE NHANVIEN VARCHAR(40);
	SELECT N.HOTEN INTO NHANVIEN 
    FROM th3qlnv.NHANVIEN AS N
    WHERE N.MANV = MANV;
    RETURN NHANVIEN;
END;//
DELIMITER ;

SELECT INDANHSACHNV('KT001');



DELIMITER //
CREATE FUNCTION DEMNV(GT VARCHAR(4))
RETURNS INT
READS SQL DATA DETERMINISTIC 
BEGIN
	DECLARE SOLUONG INT;
    SET SOLUONG = 0;
	SELECT COUNT(*) INTO SOLUONG
    FROM th3qlnv.NHANVIEN AS N
    WHERE N.GT = GT;
    RETURN SOLUONG;
END; //
DELIMITER ;

SELECT DEMNV('NU'); 


DELIMITER //
CREATE FUNCTION TIMNVNN(DMNN VARCHAR(300))
RETURNS VARCHAR(300)
READS SQL DATA DETERMINISTIC
BEGIN 
	DECLARE NHANVIEN VARCHAR(300);
    
	SELECT GROUP_CONCAT(N.HOTEN SEPARATOR ',') INTO NHANVIEN
    FROM th3qlnv.NHANVIEN AS N
    INNER JOIN th3qlnv.tdnn AS T
    ON N.MANV = T.MANV
	INNER JOIN th3qlnv.dmnn AS D
    ON T.MANN = D.MANN
	WHERE D.TENNN = DMNN;
    
    RETURN NHANVIEN;
END;//
DELIMITER ;
 
DROP FUNCTION TIMNVNN;
SELECT TIMNVNN('ANH'); 



-- 6
DELIMITER //
CREATE FUNCTION TIMGIOITINHNHANVIEN(MANV VARCHAR(5))
RETURNS VARCHAR (5)
READS SQL DATA DETERMINISTIC
BEGIN
	DECLARE GT VARCHAR(5);
    
    SELECT N.GT INTO GT
    FROM th3qlnv.NHANVIEN AS N
	WHERE N.MANV = MANV;

	RETURN GT;
END; //
DELIMITER ;

SELECT TIMGIOITINHNHANVIEN('KT001');


-- 7
DELIMITER //
CREATE FUNCTION MUCLUONG()
RETURNS varchar(1000)
READS SQL DATA DETERMINISTIC
BEGIN

    DECLARE CKLUONG VARCHAR(1000);
    DECLARE LUONGTB INT;
    
    SELECT AVG(N.LUONG) INTO LUONGTB
    FROM th3qlnv.NHANVIEN AS N
    INNER JOIN th3qlnv.PHONG AS P
    ON N.MAPH = P.MAPH
    WHERE N.MAPH = 'KDA';
    
    SELECT GROUP_CONCAT(N.MANV,',',N.HOTEN  SEPARATOR ',') INTO CKLUONG
    FROM th3qlnv.NHANVIEN AS N
    INNER JOIN th3qlnv.PHONG AS P
    ON N.MAPH = P.MAPH
    WHERE N.MAPH = 'KDA' AND N.LUONG  > LUONGTB;
    
    RETURN CKLUONG;
END; //
DELIMITER ;

SELECT MUCLUONG();

 
 -- 8
 DELIMITER //
 CREATE FUNCTION SOLUONGNV(MAPH VARCHAR(5))
 RETURNS INT
 READS SQL DATA DETERMINISTIC 
 BEGIN
	DECLARE SOLUONG INT;
    SET SOLUONG = 0;
    
    SELECT COUNT(N.MANV) INTO SOLUONG
    FROM th3qlnv.NHANVIEN AS N
    WHERE N.MAPH = MAPH;
 
	RETURN SOLUONG;
 
 END;//
 DELIMITER ;
 
 SELECT SOLUONGNV('KDA');
 
 
 
 -- 9
 CREATE VIEW NVANH AS
	SELECT N.MANV, N.HOTEN, T.TDO
    FROM TH3QLNV.NHANVIEN AS N
    INNER JOIN th3qlnv.tdnn AS T
    ON N.MANV = T.MANV;
    
 
 -- 10
 
 CREATE VIEW DSTA AS
	SELECT N.MANV,N.HOTEN,N.NGSINH,N.GT,P.TENPH,T.TDO
    FROM th3qlnv.PHONG AS P
    INNER JOIN TH3QLNV.NHANVIEN AS N
    ON P.MAPH = N.MAPH
    INNER JOIN th3qlnv.tdnn AS T
    ON N.MANV = T.MANV
    WHERE T.MANN = '01';
    

SELECT *
FROM th3qlnv.dsta AS D
WHERE D.TDO BETWEEN 'A' AND 'C';
 
 
 CREATE VIEW TAKD AS
	SELECT N.*
    FROM th3qlnv.nhanvien AS N
    INNER JOIN th3qlnv.tdnn AS T
    ON N.MANV = T.MANV
    WHERE N.MAPH = 'KDA' AND T.MANN = '01';
 
 
 INSERT INTO th3qlnv.takd 
 VALUES
	();
 
 
 DELETE FROM th3qlnv.TAKD;
 
 
 UPDATE th3qlnv.takd 
 SET SDT = '0977122309'
 WHERE MANV = 'QT001';
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

